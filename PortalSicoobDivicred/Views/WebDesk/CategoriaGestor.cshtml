@model PortalSicoobDivicred.Models.Categorias

<script>
    $(function() {
        $('#TempoCategoriaEdicao').timeDurationPicker({
            defaultValue: function() {
                return $('#TempoCategoriaEdicao').val();
            },
            onSelect: function(element, seconds, duration) {
                $('#secondsEdicao').val(seconds);
                $('#TempoCategoriaEdicao').val(duration);
            }
        });
    });
    function Confirma() {

        iziToast.show({
            title: 'WebDesk.',
            message: 'Você deseja excluir está categoria ?',
            position: 'center',
            progressBarColor: 'rgb(0, 255, 184)',
            buttons: [
                [
                    '<button>Sim</button>', function(instance, toast) {
                        instance.hide({
                                transitionOut: 'fadeOutUp',
                                onClosing: function(instance, toast, closedBy) {
                                    console.info('closedBy: ' + closedBy); //btn2
                                }
                            },
                            toast,
                            'close',
                            'btn2');
                        window.location =
                            '@Url.Action( "ExcluirCategoria", "Webdesk", new { idCategoria = TempData["IdCategoria"] } )';
                    }
                ],
                [
                    '<button>Não</button>', function(instance, toast) {
                        instance.hide({
                                transitionOut: 'fadeOutUp',
                                onClosing: function(instance, toast, closedBy) {
                                    console.info('closedBy: ' + closedBy); //btn2
                                }
                            },
                            toast,
                            'close',
                            'btn2');
                    }
                ]
            ],
            onOpening: function(instance, toast) {
                console.info('callback abriu!');
            },
            onClosing: function(instance, toast, closedBy) {
                console.info('closedBy: ' + closedBy); // tells if it was closed by 'drag' or 'button'
            }
        });
    }

</script>
<div class="field is-grouped is-12">
    <input name="IdCategoria" hidden value="@TempData["IdCategoria"]" />
    <div class="column is-6">
        <div class="field ">
            <div class="control">
                <label class="label">Descrição Categoria</label>
                @Html.TextBoxFor( m => m.DescricaoCategoria, null, new { @class = "input" } )
                @Html.ValidationMessageFor( m => m.DescricaoCategoria, null, new { style = "color:red" } )
            </div>
        </div>
    </div>

    <div class="column is-6">
        <div class="field ">
            <div class="control">
                <label class="label">Tempo de Atendimento Categoria</label>
                @Html.TextBoxFor( m => m.TempoCategoria, null, new { @class = "input", id = "TempoCategoriaEdicao", autocomplete = "off" } )
                <input type="hidden" name="secondsEdicao" value="12345" name="Valor" id="secondsEdicao" />
                @Html.ValidationMessageFor( m => m.TempoCategoria, null, new { style = "color:red" } )
            </div>
        </div>
    </div>
</div>
<div class="column is-6">
    <div class="field">
        <p class="control">
            <button type="button" onclick="javascript: Confirma(); void (0);" id="ExcluirCategoria" class="button is-danger">Excluir Categoria</button>
        </p>
    </div>
</div>