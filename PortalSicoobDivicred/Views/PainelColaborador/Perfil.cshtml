@model PortalSicoobDivicred.Models.Funcionario





@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    var Forma = 0;
    $(document).ready(function () {
        $('#CpfFuncionario').mask('000.000.000-00');
        $('#DataNascimentoFuncionario').mask('00/00/0000');
        $('#EmissaoCtps').mask('00/00/0000');
        $('#DataEmissaoRg').mask('00/00/0000');
        $('#PisFuncionario').mask('000.00000.00-0');
        $('#CepFuncionario').mask('99999-999');
        $('#TelefoneFixoFuncionario').mask('(99) 9999-9999');
        $('#TelefoneCelularFuncionario').mask('(99) 99999-9999');

        $('#DataExpedicaoCnh').mask('00/00/0000');
        $('#DataVencimentoCnh').mask('00/00/0000');
        $('#DataExpedicaoOc').mask('00/00/0000');
        $('#DataVencimentoOc').mask('00/00/0000');

    });

    function AdicionarFormacao() {

        var x = document.createElement("INPUT");
        var div = document.createElement('div');
        var div2 = document.createElement('div');
        var label = document.createElement("label");

        label.setAttribute("class", "label");

        label.innerHTML = "Tipo Formação Acadêmica";

        div.setAttribute("class", "field");
        div2.setAttribute("class", "control");

        x.setAttribute("type", "text");
        x.setAttribute("placeholder", "EX: PÓS-GRADUAÇÃO");
        x.setAttribute("id", "Tipo " + Forma);
        x.setAttribute("name", "Tipo " + Forma);
        x.setAttribute("class", "input");
        x.setAttribute("required", "");

        document.getElementById("NovaFormacao").appendChild(div);
        div.appendChild(div2);
        div2.appendChild(label);
        div2.appendChild(x);

        var x = document.createElement("INPUT");
        var div = document.createElement('div');
        var div2 = document.createElement('div');
        var label = document.createElement("label");

        label.setAttribute("class", "label");

        label.innerHTML = "Formação Acadêmica";

        div.setAttribute("class", "field");
        div2.setAttribute("class", "control");

        x.setAttribute("type", "text");
        x.setAttribute("placeholder", "EX: MBA");
        x.setAttribute("id", "formacao " + Forma);
        x.setAttribute("name", "formacao " + Forma);
        x.setAttribute("class", "input");
        x.setAttribute("required", "");
        Forma = Forma + 1;
        document.getElementById("NovaFormacao").appendChild(div);
        div.appendChild(div2);
        div2.appendChild(label);
        div2.appendChild(x);
    }

    function MostrarDocumentosExtras() {
        $("#documentosextras").removeAttr("style");
        $("#Oculta").removeAttr("style");
        $("#MostraDocumento").attr("style", "display:none");
    }

    function OcultaDocumentosExtras() {
        $("#documentosextras").attr("style", "display:none");
        $("#Oculta").attr("style", "display:none");
        $("#MostraDocumento").removeAttr("style");
    }

    function BuscaCertificacao(Nome) {
        $("#ConteudoCertificacao").empty();
        $.ajax(
            {
                type: 'POST',
                url: '/Principal/BuscaCertificacao',
                dataType: 'html',
                cache: true,
                async: true,
                data: { "IdFuncao": Nome.value },
                success: function (data) {
                    $("#ConteudoCertificaco").append(data);
                    $("#Certificacoes").removeAttr("hidden");

                }
            });
    }

    function OutroVinculo() {
        $("#VinculoExtra").removeAttr("style", "display:none");
        $("#MostraVinculo").attr("style", "display:none");
        $("#OcultaVinculo").removeAttr("style", "display:none");
    }
    function OcultaOutroVinculo() {
        $("#VinculoExtra").attr("style", "display:none");
        $("#OcultaVinculo").attr("style", "display:none");
        $("#MostraVinculo").removeAttr("style", "display:none");
    }
    function EscondeProfissional() {
        if ($("#DadosProfissionais").is(":visible")) {
            $("#DadosProfissionais").addClass("animated fadeOut");

            $("#DadosProfissionais").hide();
        } else {
            $("#DadosProfissionais").removeClass("animated fadeOut");
            $("#DadosProfissionais").addClass("animated fadeIn");
            $("#DadosProfissionais").show();
        }
    }

    function EscondePessoal() {
        if ($("#DadosPessoais").is(":visible")) {
            $("#DadosPessoais").addClass("animated fadeOut");

            $("#DadosPessoais").hide();
        } else {
            $("#DadosPessoais").removeClass("animated fadeOut");
            $("#DadosPessoais").addClass("animated fadeIn");
            $("#DadosPessoais").show();
        }
    }

    function EscondeArquivoPessoal() {
        if ($("#ArquivoPessoal").is(":visible")) {
            $("#ArquivoPessoal").addClass("animated fadeOut");

            $("#ArquivoPessoal").hide();
        } else {
            $("#ArquivoPessoal").removeClass("animated fadeOut");
            $("#ArquivoPessoal").addClass("animated fadeIn");
            $("#ArquivoPessoal").show();
        }
    }

    function EscondeFormularioPessoal() {
        if ($("#FormularioPessoal").is(":visible")) {
            $("#FormularioPessoal").addClass("animated fadeOut");

            $("#FormularioPessoal").hide();
        } else {
            $("#FormularioPessoal").removeClass("animated fadeOut");
            $("#FormularioPessoal").addClass("animated fadeIn");
            $("#FormularioPessoal").show();
        }
    }

    function AlteraPerfil() {
        document.body.style.cursor = "wait";
        var formData = new FormData();
        var totalFiles = document.getElementById("FotoPerfil").files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("FotoPerfil").files[i];

            formData.append("FotoPerfil", file);
        }
        $.ajax({
            type: "POST",
            url: '/PainelColaborador/Upload',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                alert(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Imagem alterada com sucesso.");
                document.location.href = "/Principal/Principal";
            }
        });
    }

    function UloadArquivoPessoal(NomeArquivo) {
        document.body.style.cursor = "wait";
        var formData = new FormData();
        var totalFiles = document.getElementById(NomeArquivo).files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById(NomeArquivo).files[i];

            formData.append(NomeArquivo, file, NomeArquivo);
        }
        $.ajax({
            type: "POST",
            url: '/PainelColaborador/UploadArquivo',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (data) {
                alert(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                document.location.href =
                    "/PainelColaborador/Perfil?Acao=Perfil&Mensagem=Imagem enviada com sucesso !&Controlle=PainelColaborador";
            }
        });
    }


</script>
<body>
    @if (TempData["Mensagem"] != null)
    {
        @Html.Label("")


        <script>

            iziToast.success({
                title: 'Sucesso',
                position: "center",
                message: '@TempData["Mensagem"]',
            });

        </script>
    }
    <br />
    <div class="container">
        <div class="box column is-12 is-narrow">
            <article class="media">
                <div class="media-left">
                    <figure class="image is-64x64">
                        <img src="@TempData["foto"]" alt="Image">
                    </figure>
                </div>
                <div class="media-content">
                    <div class="content">
                        <p>
                            <strong>@TempData["NomeFuncionario"]</strong>
                            <br />
                            <strong>Função: </strong>@TempData["Funcao"]
                            <br />
                            <strong>Data Admissão: </strong>@TempData["DataAdmissao"]
                            <br>
                        </p>
                    </div>
                    <nav class="level is-mobile">
                        <div class="level-left">
                            <div class="file is-small is-primary">
                                <label class="file-label">
                                    <input class="file-input" onchange="AlteraPerfil()" id="FotoPerfil" type="file" name="FotoPerfil">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Alterar Foto Perfil
                                        </span>
                                    </span>
                                </label>
                            </div>
                        </div>
                    </nav>
                </div>
            </article>
        </div>
        <div class="columns">
            <div class="column is-6">
                <div class="card ">
                    <header class="card-header">
                        <p class="card-header-title">
                            Dados Profissionais
                        </p>
                        <a href="javascript:EscondeProfissional();void(0);" class="card-header-icon" aria-label="more options">
                            <span class="icon">
                                <i class="fa fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </a>
                    </header>
                    @using (Html.BeginForm("AtualizarDadosProfissionais", "PainelColaborador", FormMethod.Post, new { id = "FormProfissional" }))
                    {
                        <div id="DadosProfissionais">
                            <div class="card-content">
                                <div class="field">
                                    <div class="control is-2 ">
                                        <label class="label">Setor</label>
                                        <div class="select  is-fullwidth">
                                            @Html.DropDownListFor(m => m.IdSetor, new SelectList(Model.Setor, "Value", "Text"), "SELECIONE O SEU SETOR", new { id = "Setor" })
                                        </div>
                                    </div>
                                </div>
                                <div class="field ">
                                    <div class="control">
                                        <label class="label">Função</label>
                                        <div class="select  is-fullwidth">
                                            @Html.DropDownListFor(m => m.IdFuncao, new SelectList(Model.Funcao, "Value", "Text"), "SELECIONE A SUA FUNÇÃO", new { id = "Funcao", onchange = "BuscaCertificacao(this)" })
                                            @Html.ValidationMessageFor(m => m.Funcao, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <blockquote id="Certificacoes">
                                        <b>Certificações Obrigatórias</b>
                                        <div id="ConteudoCertificacao">
                                            @for (int i = 0; i < Convert.ToInt32(TempData["TotalCertificacao"]); i++)
                                            {
                                                @TempData["Certificacao" + i]
                                            }

                                        </div>
                                        <br />
                                        <label class="checkbox">
                                            <input type="checkbox" id="ConfirmacaoCertificacao" name="ConfirmacaoCertificacao" @TempData["ConfirmaCertificacao"]>
                                            Possuo todas as certificações acima.
                                        </label>
                                    </blockquote>
                                </div>
                                <div class="field ">
                                    <div class="control ">
                                        <label class="label">Horário de Trabalho</label>
                                        <div class="select is-fullwidth">
                                            @Html.DropDownListFor(m => m.IdHorario, new SelectList(Model.HorarioTrabalho, "Value", "Text"), "SELECIONE O SEU HORÁRIO", new { id = "HorarioTrabalho" })
                                            @Html.ValidationMessageFor(m => m.HorarioTrabalho, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <hr />
                                </div>

                                <div class="field is-grouped column">
                                    <div class="control column is-4 is-expanded">
                                        <label class="label">N° Matricula</label>
                                        @Html.TextBoxFor(m => m.Matricula, null, new { @class = "input", placeholder = "Ex: 000168" })
                                        @Html.ValidationMessageFor(m => m.Matricula, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-4 is-expanded">
                                        <label class="label">N° CTPS</label>
                                        @Html.TextBoxFor(m => m.NumeroCTPS, null, new { @class = "input", placeholder = "Ex: 9999999" })
                                        @Html.ValidationMessageFor(m => m.NumeroCTPS, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-4 is-expanded">
                                        <label class="label">Serie CTPS</label>
                                        @Html.TextBoxFor(m => m.SerieCTPS, null, new { @class = "input", placeholder = "Ex: 0000" })
                                        @Html.ValidationMessageFor(m => m.SerieCTPS, null, new { style = "color:red" })
                                    </div>
                                </div>
                                <div class="field is-grouped column">
                                    <div class="control column is-4">
                                        <label class="label">Estado de expedição CTPS</label>
                                        @Html.TextBoxFor(m => m.UfCTPS, null, new { @class = "input", placeholder = "Ex: 0000" })
                                        @Html.ValidationMessageFor(m => m.UfCTPS, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-4">
                                        <label class="label">Data de expedição CTPS</label>
                                        @Html.TextBoxFor(m => m.EmissaoCtps, null, new { @class = "input", placeholder = "Ex: 99/99/9999", id = "EmissaoCtps" })
                                        @Html.ValidationMessageFor(m => m.EmissaoCtps, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-4">
                                        <label class="label">Ano do primeiro emprego</label>
                                        @Html.TextBoxFor(m => m.AnoPrimeiroEmprego, null, new { @class = "input", placeholder = "Ex: 2010" })
                                        @Html.ValidationMessageFor(m => m.AnoPrimeiroEmprego, null, new { style = "color:red" })
                                    </div>
                                </div>
                                <hr />
                                <div class="field column">
                                    <div class="control">
                                        <label class="label">Tipo Conta</label>
                                        <div class="select is-fullwidth">
                                            @Html.DropDownListFor(m => m.IdTipoConta, new SelectList(Model.Conta, "Value", "Text"), "SELECIONE O  TIPO DE CONTA")
                                            @Html.ValidationMessageFor(m => m.IdTipoConta, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                </div>
                                <div class="field is-grouped column">
                                    <div class="control column is-3 is-expanded">
                                        <label class="label">Código Banco</label>
                                        @Html.TextBoxFor(m => m.CodigoBanco, null, new { @class = "input", placeholder = "Ex: 756" })
                                        @Html.ValidationMessageFor(m => m.CodigoBanco, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-3 is-expanded">
                                        <label class="label">Agência</label>
                                        @Html.TextBoxFor(m => m.Agencia, null, new { @class = "input", placeholder = "Ex: 4030" })
                                        @Html.ValidationMessageFor(m => m.Agencia, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-3">
                                        <label class="label">Conta Corrente</label>
                                        @Html.TextBoxFor(m => m.ContaCorrente, null, new { @class = "input", placeholder = "Ex: 99.999-9" })
                                        @Html.ValidationMessageFor(m => m.ContaCorrente, null, new { style = "color:red" })
                                    </div>
                                </div>
                                <hr />

                                <div class="field">
                                    <div class="title is-4 is-vertical is-parent">
                                        <h2 class="title is-4">Dependentes</h2>
                                    </div>
                                    <div class="field">
                                        <input type="checkbox" value="true" name="check1" id="check1" class="is-checkradio is-small  has-background-color" @TempData["Check1"]>
                                        <label for="check1">
                                            CÔNJUGE OU COMPANHEIRO (A) COM O (A) QUAL TENHA FILHO OU VIVA A MAIS DE 5(CINCO) ANOS
                                        </label>
                                        <br />
                                        <input type="checkbox" value="true" name="check2" id="check2" class="is-checkradio is-small  has-background-color" @TempData["Check2"]>
                                        <label for="check2">
                                            FILHO (A) OU ENTEADO (A) ATÉ 21 (VINTE E UM) ANOS
                                        </label>
                                        <br />

                                        <input type="checkbox" value="true" name="check3" id="check3" class="is-checkradio is-small  has-background-color" @TempData["Check3"]>
                                        <label for="check3">
                                            FILHO (A) OU ENTEADO (A) UNIVERSITÁRIO (A) OU CURSANDO ESCOLA TÉCNICA DE 2º GRAU, ATÉ 24 (VINTE E QUATRO) ANOS
                                        </label>
                                        <br />

                                        <input type="checkbox" value="4" id="check4" name="check4" class="is-checkradio is-small  has-background-color" @TempData["Check4"]>
                                        <label for="check4">
                                            FILHO (A) OU ENTEADO (A) EM QUALQUER IDADE, QUANDO INCAPACITADO FÍSICA E/OU MENTALMENTE PARA O TRABALHO
                                        </label>
                                        <br />

                                        <input type="checkbox" value="true" id="check5" name="check5" class="is-checkradio is-small  has-background-color" @TempData["Check5"]>
                                        <label for="check5">
                                            IRMÃO (A), NETO (A) OU BISNETO (A) SEM ARRIMO DOS PAIS, DO (A) QUAL DETENHA A GUARDA JUDICIAL, ATÉ 21 (VINTE UM) ANOS
                                        </label>
                                        <br />

                                        <input type="checkbox" value="true" id="check6" name="check6" class="is-checkradio is-small  has-background-color" @TempData["Check6"]>
                                        <label for="check6">
                                            IRMÃO (A), NETO (A) OU BISNETO (A) SEM ARRIMO DOS PAIS,COM IDADE ATÉ 24 ANOS, SE AINDA ESTIVER CURSANDO ESTABELECIMENTO DE NÍVEL SUPERIOR OU ESCOLA TÉCNICA DE 2º GRAU, DESDE QUE TENHA DETIDO SUA GUARDA JUDICIAL ATÉ OS 21 ANOS
                                        </label>
                                        <br />

                                        <input type="checkbox" value="true" id="check7" name="check7" class="is-checkradio is-small  has-background-color" @TempData["Check7"]>
                                        <label for="check7">
                                            IRMÃO (A), NETO (A) OU BISNETO (A) SEM ARRIMO DOS PAIS, DO (A) QUAL DETENHA A GUARDA JUDICIAL, EM QUALQUER IDADE, QUANDO INCAPACITADO FÍSICA E/OU MENTALMENTE PARA O TRABALHO

                                        </label>
                                        <br />

                                        <input type="checkbox" id="check8" value="true" name="check8" class="is-checkradio is-small  has-background-color" @TempData["Check8"]>
                                        <label for="check8">
                                            PAIS,AVÓS E BISAVÓS
                                        </label>
                                        <br />

                                        <input type="checkbox" id="check9" value="true" name="check9" class="is-checkradio is-small  has-background-color" @TempData["Check9"]>
                                        <label for="check9">
                                            MENOR POBRE, ATÉ 21 (VINTE E UM ANOS), QUE CRIE E EDUQUE E DO QUAL DETENHA A GUARDA JUDICIAL
                                        </label>
                                        <br />

                                        <input type="checkbox" id="check10" value="true" name="check10" class="is-checkradio is-small  has-background-color" @TempData["Check10"]>
                                        <label for="check10">
                                            A PESSOA ABSOLUTAMENTE INCAPAZ, DA QUAL SEJA TUTOR OU CURADOR
                                        </label>
                                    </div>
                                    <br />
                                    <div class="control  is-fullwidth  is-expanded">
                                        <label class="label">Nome dos dependentes junto com CPF:</label>
                                        @Html.TextAreaFor(m => m.DadosDependentes, new { @class = "textarea", placeholder = "Ex: Nome - CPF " })
                                        @Html.ValidationMessageFor(m => m.DadosDependentes, null, new { style = "color:red" })
                                    </div>
                                    <div class="control column is-expanded">
                                        <label class="label">Algum dos dependentes citados acima são para fins de IRRF?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.DependenteIrrf, "Sim", new { @class = "is-checkradio is-small", id = "checkirrfsim" })
                                            <label for="checkirrfsim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.DependenteIrrf, "Não", new { @class = "is-checkradio is-small", id = "checkirrfnao" })
                                            <label for="checkirrfnao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.DependenteIrrf, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control is-fullwidth  is-expanded">
                                        <label class="label">Informe os CPF e nome dos dependentes para fins de IRRF. Caso não tenha nenhum informe abaixo.</label>
                                        @Html.TextAreaFor(m => m.CpfIrrf, new { @class = "textarea", placeholder = "Ex: CPF - NOME" })
                                        @Html.ValidationMessageFor(m => m.CpfIrrf, null, new { style = "color:red" })

                                    </div>

                                    <div class="control column  is-expanded">
                                        <label class="label">Algum dos dependentes citados acima são para fins de salário-família?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.DependenteFamilia, "Sim", new { @class = "is-checkradio is-small", id = "checkfamiliasim" })
                                            <label for="checkfamiliasim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.DependenteFamilia, "Não", new { @class = "is-checkradio is-small", id = "checkfamilianao" })
                                            <label for="checkfamilianao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.DependenteFamilia, null, new { style = "color:red" })
                                        </div>
                                    </div>

                                </div>
                                <div>
                                    @if (TempData["ExibeDocumentoExtra"].ToString().Length > 0)
                                    {
                                        <a class="tag is-primary is-rounded is-medium" id="MostraVinculo" href="javascript:OutroVinculo();void(0);">Adicionar Outro Vinculo Empregatício</a>
                                        <a class="tag is-primary is-rounded is-medium" @TempData["MostraVinculo"] id="OcultaVinculo" href="javascript:OcultaOutroVinculo();void(0);">Ocultar Outro Vinculo Empregatício</a>
                                    }
                                    else
                                    {
                                        <a class="tag is-primary is-rounded is-medium" style="display: none ;" id="MostraVinculo" href="javascript:OutroVinculo();void(0);">Adicionar Outro Vinculo Empregatício</a>
                                        <a class="tag is-primary is-rounded is-medium" @TempData["MostraVinculo"] id="OcultaVinculo" href="javascript:OcultaOutroVinculo();void(0);">Ocultar Outro Vinculo Empregatício</a>
                                    }
                                    <div id="VinculoExtra" @TempData["MostraVinculo"]>
                                        <div class="field is-grouped column">
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Nome Empresa</label>
                                                @Html.TextBoxFor(m => m.MultiploNomeEmpresa, null, new { @class = "input", placeholder = "Ex: Fulano LTDA" })
                                                @Html.ValidationMessageFor(m => m.MultiploNomeEmpresa, null, new { style = "color:red" })
                                            </div>
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">CNPJ</label>
                                                @Html.TextBoxFor(m => m.MultiploCnpj, null, new { @class = "input", placeholder = "Ex: 99.999.999/9999-99" })
                                                @Html.ValidationMessageFor(m => m.MultiploCnpj, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="field is-grouped column">
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Remuneração</label>
                                                @Html.TextBoxFor(m => m.MultiploRemuneracao, null, new { @class = "input", placeholder = "Ex: R$ 950,00" })
                                                @Html.ValidationMessageFor(m => m.MultiploRemuneracao, null, new { style = "color:red" })
                                            </div>
                                            <div class="control column is-3">
                                                <label class="label">Cometário</label>
                                                @Html.TextBoxFor(m => m.MultiploComentario, null, new { @class = "input", placeholder = "Ex: observação em relação ao vinculo trabalhista" })
                                                @Html.ValidationMessageFor(m => m.MultiploRemuneracao, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr />

                                <div>
                                    <article class="message  is-primary">
                                        <div class="message-body">
                                            <h2 class="title is-5 has-text-centered">
                                                DECLARAÇÃO
                                            </h2>
                                            <div class="">
                                                <p>
                                                    Declaro para os devidos fins que as informações constantes desse formulário são fieis à verdade e condizentes com a realidade dos fatos à época.
                                                </p>
                                                <p>
                                                    Declaro que todas as informações mencionadas nesse formulário foram extraídas dos documentos são da minha inteira responsabilidade.
                                                </p>
                                                <p>
                                                    Além disso, fui informado que se houver qualquer alteração nesta Declaração, a mesma deverá ser modificada junto ao Departamento de Recursos Humanos.
                                                </p>
                                                <p>
                                                    Por fim, fico ciente que através desse documento a falsidade das informações configura crime previsto no Código Penal Brasileiro e passível de apuração na forma da Lei.
                                                </p>
                                                <p>
                                                    Nada mais a declarar, e ciente das responsabilidades pelas declarações prestadas, firmo a presente.
                                                </p>
                                                <div class="control">
                                                    <input type="checkbox" id="ConfirmacaoDados" name="ConfirmacaoDados" class="is-checkradio has-background-color " @TempData["ConfirmaCertificacao"] required>
                                                    <label for="ConfirmacaoDados">
                                                        <strong> Eu aceito e estou ciente de todos os termos citados acima.</strong>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </article>
                                </div>
                            </div>
                            <footer class="card-footer">
                                <a onclick="FormProfissional.submit();" class="card-footer-item">Salvar</a>
                            </footer>
                        </div>
                    }
                </div>

                <br />
                <div class="card">
                    <header class="card-header">
                        <p class="card-header-title">
                            Formulário Pessoal
                        </p>
                        <a href="javascript:EscondeFormularioPessoal();void(0);" class="card-header-icon" aria-label="more options">
                            <span class="icon">
                                <i class="fa fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </a>
                    </header>
                    @using (Html.BeginForm("AtualizarFormularioPessoal", "PainelColaborador", FormMethod.Post, new { id = "FormPerguntas" }))
                    {
                        <div id="FormularioPessoal">
                            <div class="card-content">
                                <div class="field">
                                    <div class="control">
                                        <label class="label">Quantos Filhos você tem ?</label>
                                        @Html.TextBoxFor(m => m.QuatidadeFilho, null, new { @class = "input" })
                                        @Html.ValidationMessageFor(m => m.QuatidadeFilho, null, new { style = "color:red" })
                                    </div>
                                    <div class="control">
                                        <label class="label">Caso você tenha Filhos conte-nos quais as datas de nascimento deles ?</label>
                                        @Html.TextBoxFor(m => m.DataNascimentoFilho, null, new { @class = "input" })
                                        @Html.ValidationMessageFor(m => m.DataNascimentoFilho, null, new { style = "color:red" })
                                    </div>
                                    <div class="control">
                                        <label class="label">Em caso de uma emergência devemos ligar para quem ?</label>
                                        @Html.TextBoxFor(m => m.ContatoEmergencia, null, new { @class = "input" })
                                        @Html.ValidationMessageFor(m => m.ContatoEmergencia, null, new { style = "color:red" })
                                    </div>
                                    <div class="control">
                                        <label class="label">Quais são seus principais hobbies ?</label>
                                        @Html.TextBoxFor(m => m.PrincipaisHobbies, null, new { @class = "input" })
                                        @Html.ValidationMessageFor(m => m.PrincipaisHobbies, null, new { style = "color:red" })
                                    </div>
                                    <div class="control">
                                        <label class="label">Qual sua comida favorita?</label>
                                        @Html.TextBoxFor(m => m.ComidaFavorita, null, new { @class = "input" })
                                        @Html.ValidationMessageFor(m => m.ComidaFavorita, null, new { style = "color:red" })
                                    </div>
                                    <div class="control">
                                        <label class="label">Você gosta de viajar ? Se sim quais os principais destinos que você gostaria de ir.</label>
                                        @Html.TextBoxFor(m => m.Viagem, null, new { @class = "input" })
                                        @Html.ValidationMessageFor(m => m.Viagem, null, new { style = "color:red" })
                                    </div>

                                    <div class="control column ">
                                        <label class="label">Você deseja contribuir com o sindicato ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.ContribuicaoSindical, "Sim", new { @class = "is-checkradio is-small", id = "checksindicalsim" })
                                            <label for="checksindicalsim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.ContribuicaoSindical, "Não", new { @class = "is-checkradio is-small", id = "checksindicalnao" })
                                            <label for="checksindicalnao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.ContribuicaoSindical, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Você deseja receber notificações do Portal Sicoob Divicred via e-mail ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.NotificacaoEmail, "Sim", new { @class = "is-checkradio is-small", id = "checknotificacaosim" })
                                            <label for="checknotificacaosim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.NotificacaoEmail, "Não", new { @class = "is-checkradio is-small", id = "checknotificacaonao" })
                                            <label for="checknotificacaonao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.NotificacaoEmail, null, new { style = "color:red" })
                                        </div>
                                    </div>

                                    <br />

                                </div>
                            </div>
                            <footer class="card-footer">
                                <a onclick="FormPerguntas.submit();" class="card-footer-item">Salvar</a>
                            </footer>
                        </div>
                    }
                </div>


                <br />
                <div class="card">
                    <header class="card-header">
                        <p class="card-header-title">
                            Arquivos Pessoais
                        </p>
                        <a href="javascript:EscondeArquivoPessoal();void(0);" class="card-header-icon" aria-label="more options">
                            <span class="icon">
                                <i class="fa fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </a>
                    </header>
                    <div id="ArquivoPessoal">
                        <div class="card-content">
                            <div class="file has-name is-fullwidth @TempData["StatusFoto"]">
                                <label class="file-label">
                                    <input class="file-input " id="Foto" onchange="UloadArquivoPessoal('Foto')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Foto 3/4
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeFoto"]
                                    </span>
                                </label>
                            </div>
                            <br />
                            <div class="file has-name is-fullwidth @TempData["StatusCTPS"]">
                                <label class="file-label">
                                    <input class="file-input" id="CTPS" onchange="UloadArquivoPessoal('CTPS')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            CTPS
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeCTPS"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusPIS"]">
                                <label class="file-label">
                                    <input class="file-input" id="PIS" onchange="UloadArquivoPessoal('PIS')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            PIS
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomePIS"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusCPF"]">
                                <label class="file-label">
                                    <input class="file-input " id="CPF" onchange="UloadArquivoPessoal('CPF')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            CPF
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeCPF"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusRG"]">
                                <label class="file-label">
                                    <input class="file-input " id="RG" onchange="UloadArquivoPessoal('RG')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            RG
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeRG"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusTitulo Eleitor"]">
                                <label class="file-label">
                                    <input class="file-input " onchange="UloadArquivoPessoal('Titulo Eleitor')" id="Titulo Eleitor" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Título de Eleitor
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeTitulo Eleitor"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusCartao SUS"]">
                                <label class="file-label">
                                    <input class="file-input " id="Cartao SUS" onchange="UloadArquivoPessoal('Cartao SUS')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Cartão SUS
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeCartao SUS"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusCNH"] ">
                                <label class="file-label">
                                    <input class="file-input " id="CNH" onchange="UloadArquivoPessoal('CNH')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            CNH
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeCNH"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusComprovante Endereco"]">
                                <label class="file-label">
                                    <input class="file-input " id="Comprovante Endereco" onchange="UloadArquivoPessoal('Comprovante Endereco')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Comprovante de Endereço
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeComprovante Endereco"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusTipo Sanguineo"]">
                                <label class="file-label">
                                    <input class="file-input " id="Tipo Sanguineo" onchange="UloadArquivoPessoal('Tipo Sanguineo')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Tipo Sanguíneo
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeTipo Sanguineo"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusCertidao"]">
                                <label class="file-label">
                                    <input class="file-input " id="Certidao" onchange="UloadArquivoPessoal('Certidao')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Certidão Nascimento/Casamento
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeCertidao"]
                                    </span>
                                </label>
                            </div>

                            <br />

                            <div class="file has-name is-fullwidth @TempData["StatusCertidao Filho"]">
                                <label class="file-label">
                                    <input class="file-input " id="Certidao Filho" onchange="UloadArquivoPessoal('Certidao Filho')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Certidão(Filhos)
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeCertidao Filho"]
                                    </span>
                                </label>
                            </div>

                            <br />


                            <div class="file has-name is-fullwidth @TempData["StatusReservista"]">
                                <label class="file-label">
                                    <input class="file-input " id="Reservista" onchange="UloadArquivoPessoal('Reservista')" type="file" name="resume">
                                    <span class="file-cta">
                                        <span class="file-icon">
                                            <i class="fa fa-upload"></i>
                                        </span>
                                        <span class="file-label">
                                            Certificado de Reservista
                                        </span>
                                    </span>
                                    <span class="file-name">
                                        @TempData["NomeReservista"]
                                    </span>
                                </label>
                            </div>

                        </div>
                    </div>
                </div>


            </div>


            <div class="column is-6">
                <div class="card">
                    <header class="card-header">
                        <p class="card-header-title">
                            Dados Pessoais
                        </p>
                        <a href="javascript:EscondePessoal();void(0);" class="card-header-icon" aria-label="more options">
                            <span class="icon">
                                <i class="fa fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </a>
                    </header>
                    @using (Html.BeginForm("AtualizaDadosPessoais", "PainelColaborador", FormMethod.Post, new { id = "FormPessoal" }))
                    {
                        <div id="DadosPessoais">
                            <div class="card-content">
                                @Html.ValidationSummary(true, "", new { style = "color:red;" })

                                <div class="content" id="Pessoais">
                                    <div class="field is-grouped">
                                        <p class="control column is-3 is-expanded">
                                            <label class="label">Nome</label>
                                            @Html.TextBoxFor(m => m.NomeFuncionario, null, new { @class = "input", placeholder = "Ex:José Da Silva" })
                                            @Html.ValidationMessageFor(m => m.NomeFuncionario, null, new { style = "color:red" })
                                        </p>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">CPF</label>
                                            @Html.TextBoxFor(m => m.CpfFuncionario, null, new { @class = "input", placeholder = "Ex: 999.999.999 - 99", id = "CpfFuncionario" })
                                            @Html.ValidationMessageFor(m => m.CpfFuncionario, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">PIS</label>
                                            @Html.TextBoxFor(m => m.PisFuncionario, null, new { @class = "input", placeholder = "Ex: 999.99999.99-9", id = "PisFuncionario" })
                                            @Html.ValidationMessageFor(m => m.PisFuncionario, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">RG</label>
                                            @Html.TextBoxFor(m => m.RgFuncionario, null, new { @class = "input", placeholder = "Ex: 13980091", id = "RgFuncionario" })
                                            @Html.ValidationMessageFor(m => m.RgFuncionario, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Data Emissão RG</label>
                                            @Html.TextBoxFor(m => m.DataExpedicaoDocumentoRg, null, new { @class = "input", placeholder = "Ex: 99/99/9999", id = "DataEmissaoRg" })
                                            @Html.ValidationMessageFor(m => m.DataExpedicaoDocumentoRg, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Orgão Emissor RG</label>
                                            @Html.TextBoxFor(m => m.OrgaoEmissorRg, null, new { @class = "input", placeholder = "Ex: PC-MG" })
                                            @Html.ValidationMessageFor(m => m.OrgaoEmissorRg, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped">
                                        <p class="control column is-3 is-expanded">
                                            <label class="label">Nacionalidade</label>
                                            @Html.TextBoxFor(m => m.Nacionalidade, null, new { @class = "input", placeholder = "Ex:Brasileiro" })
                                            @Html.ValidationMessageFor(m => m.Nacionalidade, null, new { style = "color:red" })
                                        </p>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Data Nascimento</label>
                                            @Html.TextBoxFor(m => m.DataNascimentoFuncionario, null, new { @class = "input", placeholder = "Ex: 99/99/9999", id = "DataNascimentoFuncionario" })
                                            @Html.ValidationMessageFor(m => m.DataNascimentoFuncionario, null, new { style = "color:red" })
                                        </div>
                                        <p class="control column is-3 is-expanded">
                                            <label class="label">Local de Nascimento</label>
                                            @Html.TextBoxFor(m => m.LocalNascimento, null, new { @class = "input", placeholder = "Ex: Divinópolis" })
                                            @Html.ValidationMessageFor(m => m.LocalNascimento, null, new { style = "color:red" })
                                        </p>
                                    </div>
                                    <div class="field is-grouped">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Estado de Nascimento</label>
                                            @Html.TextBoxFor(m => m.UfNascimento, null, new { @class = "input", placeholder = "Ex: MG" })
                                            @Html.ValidationMessageFor(m => m.UfNascimento, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Telefone Fixo</label>
                                            @Html.TextBoxFor(m => m.TelefoneFixo, null, new { @class = "input", placeholder = "Ex:(37)3222-2222", id = "TelefoneFixoFuncionario" })
                                            @Html.ValidationMessageFor(m => m.TelefoneFixo, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Telefone Celular</label>
                                            @Html.TextBoxFor(m => m.TelefoneCelular, null, new { @class = "input", placeholder = "Ex:(37)99999-9999", id = "TelefoneCelularFuncionario" })
                                            @Html.ValidationMessageFor(m => m.TelefoneCelular, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Nome da Mãe</label>
                                            @Html.TextBoxFor(m => m.NomeMae, null, new { @class = "input", placeholder = "Ex: Maria da Silva" })
                                            @Html.ValidationMessageFor(m => m.NomeMae, null, new { style = "color:red" })
                                        </div>

                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Nome do Pai</label>
                                            @Html.TextBoxFor(m => m.NomePai, null, new { @class = "input", placeholder = "Ex: Joaquin da Silva" })
                                            @Html.ValidationMessageFor(m => m.NomePai, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped">
                                        <div class="control column is-4 is-expanded ">
                                            <label class="label">Estado Civil dos Pais</label>
                                            <div class="select">
                                                @Html.DropDownListFor(m => m.IdEstadoCivilPais, new SelectList(Model.PaisDivorciados, "Value", "Text"), "SELECIONE O ESTADO CIVIL", new { id = "EstadoCivilPais" })
                                                @Html.ValidationMessageFor(m => m.PaisDivorciados, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                    <p class="control column">
                                        @if (TempData["ExibeDocumentoExtra"].ToString().Length > 0)
                                        {
                                            <a class="tag is-primary is-rounded is-medium" id="MostraDocumento" href="javascript:MostrarDocumentosExtras();void(0);">Mostrar Documentos Extras</a>
                                            <a class="tag is-primary is-rounded is-medium" @TempData["ExibeDocumentoExtra"] id="Oculta" href="javascript:OcultaDocumentosExtras();void(0);">Ocultar Documentos Extras</a>
                                        }
                                        else
                                        {
                                            <a class="tag is-primary is-rounded is-medium" style="display: none" id="MostraDocumento" href="javascript:MostrarDocumentosExtras();void(0);">Mostrar Documentos Extras</a>
                                            <a class="tag is-primary is-rounded is-medium" id="Oculta" href="javascript:OcultaDocumentosExtras();void(0);">Ocultar Documentos Extras</a>
                                        }
                                    </p>
                                    <div id="documentosextras" @TempData["ExibeDocumentoExtra"]>
                                        <div class="field is-grouped">
                                            <p class="control column is-3 is-expanded">
                                                <label class="label">N° CNH</label>
                                                @Html.TextBoxFor(m => m.Cnh, null, new { @class = "input", placeholder = "Ex: 999999" })
                                                @Html.ValidationMessageFor(m => m.Cnh, null, new { style = "color:red" })
                                            </p>
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Orgão Emissor CNH</label>
                                                @Html.TextBoxFor(m => m.OrgaoEmissorCnh, null, new { @class = "input", placeholder = "Ex: DETRAM-MG" })
                                                @Html.ValidationMessageFor(m => m.OrgaoEmissorCnh, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="field is-grouped">
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Data Epedição CNH</label>
                                                @Html.TextBoxFor(m => m.DataExpedicaoDocumentoCnh, null, new { @class = "input", placeholder = "Ex:(37)3222-2222", id = "DataExpedicaoCnh" })
                                                @Html.ValidationMessageFor(m => m.DataExpedicaoDocumentoCnh, null, new { style = "color:red" })
                                            </div>

                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Data Vencimento CNH</label>
                                                @Html.TextBoxFor(m => m.DataValidadeCnh, null, new { @class = "input", placeholder = "Ex:(37)99999-9999", id = "DataVencimentoCnh" })
                                                @Html.ValidationMessageFor(m => m.DataValidadeCnh, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="field is-grouped">
                                            <p class="control column is-3 is-expanded">
                                                <label class="label">N° OC(Órgão de Classe)</label>
                                                @Html.TextBoxFor(m => m.Oc, null, new { @class = "input", placeholder = "Ex: 999999" })
                                                @Html.ValidationMessageFor(m => m.Oc, null, new { style = "color:red" })
                                            </p>
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Orgão Emissor OC(Órgão de Classe)</label>
                                                @Html.TextBoxFor(m => m.OrgaoEmissorOc, null, new { @class = "input", placeholder = "Ex: CREA-MG" })
                                                @Html.ValidationMessageFor(m => m.OrgaoEmissorOc, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="field is-grouped">
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Data Epedição OC</label>
                                                @Html.TextBoxFor(m => m.DataExpedicaoOc, null, new { @class = "input", placeholder = "Ex: 99/99/99999", id = "DataExpedicaoOc" })
                                                @Html.ValidationMessageFor(m => m.DataExpedicaoOc, null, new { style = "color:red" })
                                            </div>
                                            <div class="control column is-3 is-expanded">
                                                <label class="label">Data Vencimento OC</label>
                                                @Html.TextBoxFor(m => m.DataValidadeOc, null, new { @class = "input", placeholder = "Ex:99/99/9999", id = "DataVencimentoOc" })
                                                @Html.ValidationMessageFor(m => m.DataValidadeOc, null, new { style = "color:red" })
                                            </div>

                                        </div>
                                    </div>


                                    <hr />

                                    <div class="field is-grouped column">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Gênero</label>
                                            <div class="select">
                                                @Html.DropDownListFor(m => m.IdSexo, new SelectList(Model.Sexo, "Value", "Text"), "SELECIONE O SEU GÉNERO", new { id = "Sexo" })
                                                @Html.ValidationMessageFor(m => m.IdSexo, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Descrição de Género:</label>
                                            @Html.TextBoxFor(m => m.DescricaoSexo, null, new { @class = "input", id = "DescricaosexoFuncionario" })
                                            @Html.ValidationMessageFor(m => m.DescricaoSexo, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped column">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Etnia/Raça</label>
                                            <div class="select">
                                                @Html.DropDownListFor(m => m.IdEtnia, new SelectList(Model.Etnia, "Value", "Text"), "SELECIONE A SUA ETNIA/RAÇA", new { id = "Etnia" })
                                                @Html.ValidationMessageFor(m => m.IdEtnia, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="control column is-3 is-expanded ">
                                            <label class="label">Estado Civil</label>
                                            <div class="select">
                                                @Html.DropDownListFor(m => m.IdEstadoCivil, new SelectList(Model.EstadoCivil, "Value", "Text"), "SELECIONE O SEU ESTADO CIVIL", new { id = "EstadoCivil" })
                                                @Html.ValidationMessageFor(m => m.IdEstadoCivil, null, new { style = "color:red" })
                                            </div>
                                        </div>

                                    </div>

                                    <hr />
                                    <div class="field is-grouped column">
                                        <div class="control column is-4 is-expanded ">
                                            <label class="label">Formação</label>
                                            <div class="select">
                                                @Html.DropDownListFor(m => m.IdFormacao, new SelectList(Model.Formacao, "Value", "Text"), "SELECIONE A SUA FORMAÇÃO", new { id = "Formacao" })
                                                @Html.ValidationMessageFor(m => m.IdFormacao, null, new { style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="control is-4 column is-expanded">
                                            <label class="label">Formação Acadêmica</label>
                                            @Html.TextBoxFor(m => m.FormacaoAcademica, null, new { @class = "input", placeholder = "Ex: Administração", id = "FormacaoFuncionario" })
                                            @Html.ValidationMessageFor(m => m.FormacaoAcademica, null, new { style = "color:red" })
                                        </div>

                                    </div>
                                    @for (var i = 0; i < Convert.ToInt32(TempData["TotalFormacao"]); i++)
                                    {
                                        <div class=" column">
                                            <div class="field">
                                                <div class="contro">
                                                    <label class="label">Tipo Formação Acadêmica</label>
                                                    <input type="text" class="input is-fullwidth" name="@TempData["IdTipoFormacao" + i ]" value="@TempData["TipoFormacaoExtra" + i]" />
                                                </div>
                                            </div>
                                            <div class="field">
                                                <div class="control ">
                                                    <label class="label">Formação Acadêmica</label>
                                                    <input type="text" class="input is-fullwidth" name="@TempData["IdFormacaoExtra" + i]" value="@TempData["FormacaoExtra" + i]" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    <div id="NovaFormacao" class="column">


                                    </div>
                                    <P class="control column">
                                        <a class="tag is-primary is-rounded is-medium" href="javascript:AdicionarFormacao();void(0);">Adicionar outra formação</a>
                                    </P>

                                    <div class="field is-grouped column">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Usuário do Sistema</label>
                                            @Html.TextBoxFor(m => m.UsuarioSistema, null, new { @class = "input", placeholder = "Ex:SicoobD4030_00", id = "UsuarioFuncionario" })
                                            @Html.ValidationMessageFor(m => m.UsuarioSistema, null, new { style = "color:red" })
                                        </div>


                                        <div class="control column is-3 is-expanded">
                                            <label class="label">E-mail</label>
                                            @Html.TextBoxFor(m => m.Email, null, new { @class = "input", placeholder = "Ex:teste@divicred.com.br", id = "EmailFuncionario" })
                                            @Html.ValidationMessageFor(m => m.Email, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped column">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">E-mail Secundário</label>
                                            @Html.TextBoxFor(m => m.EmailSecundario, null, new { @class = "input", placeholder = "Ex:teste@divicred.com.br", id = "EmailFuncionario" })
                                            @Html.ValidationMessageFor(m => m.EmailSecundario, null, new { style = "color:red" })
                                        </div>

                                        <div class="control column is-3 is-expanded">
                                            <label class="label">PA</label>
                                            @Html.TextBoxFor(m => m.PA, null, new { @class = "input", placeholder = "Ex:99", id = "PaFuncionario" })
                                            @Html.ValidationMessageFor(m => m.PA, null, new { style = "color:red" })
                                        </div>

                                    </div>
                                    <hr />
                                    <div class="title is-4 is-vertical is-parent">
                                        <h2 class="title is-4">Endereço Pessoal</h2>
                                    </div>

                                    <div class="field is-grouped ">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">CEP</label>
                                            @Html.TextBoxFor(m => m.Cep, null, new { @class = "input", placeholder = "Ex: 35500-002", id = "CepFuncionario" })
                                            @Html.ValidationMessageFor(m => m.Cep, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Rua</label>
                                            @Html.TextBoxFor(m => m.Rua, null, new { @class = "input", placeholder = "Ex: Av. Primeiro de Junho", id = "RuaFuncionario" })
                                            @Html.ValidationMessageFor(m => m.Rua, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="field is-grouped column">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">N°</label>
                                            @Html.TextBoxFor(m => m.Numero, null, new { @class = "input", placeholder = "Ex: 210", id = "NumeroFuncionario" })
                                            @Html.ValidationMessageFor(m => m.Numero, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Complemento</label>
                                            @Html.TextBoxFor(m => m.Complemento, null, new { @class = "input", placeholder = "Ex: Apt:210", })
                                            @Html.ValidationMessageFor(m => m.Complemento, null, new { style = "color:red" })
                                        </div>


                                    </div>
                                    <div class="field is-grouped ">
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Bairro</label>
                                            @Html.TextBoxFor(m => m.Bairro, null, new { @class = "input", placeholder = "Ex: Centro", id = "BairroFuncionario" })
                                            @Html.ValidationMessageFor(m => m.Bairro, null, new { style = "color:red" })
                                        </div>

                                        <div class="control column is-3 is-expanded">
                                            <label class="label">Cidade</label>
                                            @Html.TextBoxFor(m => m.Cidade, null, new { @class = "input", placeholder = "Ex: Divinópolis", id = "CidadeFuncionario" })
                                            @Html.ValidationMessageFor(m => m.Cidade, null, new { style = "color:red" })
                                        </div>
                                        <div class="control column is-3 is-expanded">
                                            <label class="label">País</label>
                                            @Html.TextBoxFor(m => m.Pais, null, new { @class = "input", placeholder = "Ex: Brasil" })
                                            @Html.ValidationMessageFor(m => m.Pais, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Residência própria ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.ResidenciaPropria, "Sim", new { @class = "is-checkradio is-small", id = "checkpropriasim" })
                                            <label for="checkpropriasim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.ResidenciaPropria, "Não", new { @class = "is-checkradio is-small", id = "checkprorpianao" })
                                            <label for="checkprorpianao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.ResidenciaPropria, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Sua residência foi comprada com recursos de FGTS ?</label>
                                        <div class="field">

                                            @Html.RadioButtonFor(m => m.RecursoFgts, "Sim", new { @class = "is-checkradio is-small", id = "checkfgtssim" })
                                            <label for="checkfgtssim">
                                                Sim
                                            </label>

                                            @Html.RadioButtonFor(m => m.RecursoFgts, "Não", new { @class = "is-checkradio is-small", id = "checkfgtsnao" })
                                            <label for="checkfgtsnao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.RecursoFgts, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Você possui deficiência motora ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.DeficienteMotor, "Sim", new { @class = "is-checkradio is-small", id = "checkdeficientesim" })
                                            <label for="checkdeficientesim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.DeficienteMotor, "Não", new { @class = "is-checkradio is-small", id = "checkdeficientenao" })
                                            <label for="checkdeficientenao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.DeficienteMotor, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Você possui deficiência visual ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.DeficienteVisual, "Sim", new { @class = "is-checkradio is-small", id = "checkvisualsim" })
                                            <label for="checkvisualsim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.DeficienteVisual, "Não", new { @class = "is-checkradio is-small", id = "checkvisualnao" })
                                            <label for="checkvisualnao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.DeficienteVisual, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Você possui deficiência auditiva ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.DeficienteAuditivo, "Sim", new { @class = "is-checkradio is-small", id = "checkauditivosim" })
                                            <label for="checkauditivosim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.DeficienteAuditivo, "Não", new { @class = "is-checkradio is-small", id = "checkauditivonao" })
                                            <label for="checkauditivonao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.DeficienteAuditivo, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control column">
                                        <label class="label">Você passou por reabilitação ?</label>
                                        <div class="field">
                                            @Html.RadioButtonFor(m => m.Reabilitado, "Sim", new { @class = "is-checkradio is-small", id = "checkreabilitadosim" })
                                            <label for="checkreabilitadosim">
                                                Sim
                                            </label>
                                            @Html.RadioButtonFor(m => m.Reabilitado, "Não", new { @class = "is-checkradio is-small", id = "checkreabilitadonao" })
                                            <label for="checkreabilitadonao">
                                                Não
                                            </label>
                                            @Html.ValidationMessageFor(m => m.Reabilitado, null, new { style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="control  is-fullwidth">
                                        <label class="label">Observação:</label>
                                        @Html.TextAreaFor(m => m.ObservacaoDeficiente, new { @class = "textarea", placeholder = "Ex: Descrição de alguma deficiência não citada acima" })
                                        @Html.ValidationMessageFor(m => m.DeficienteMotor, null, new { style = "color:red" })
                                    </div>
                                </div>
                            </div>
                            <footer class="card-footer">
                                <a onclick="FormPessoal.submit();" class="card-footer-item">Salvar</a>
                            </footer>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</body>