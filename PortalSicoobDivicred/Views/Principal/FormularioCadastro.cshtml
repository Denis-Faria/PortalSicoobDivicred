@model PortalSicoobDivicred.Models.Funcionario
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <script type="text/javascript" src="@Url.Content("https://code.jquery.com/jquery-2.1.1.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/css/bulma-steps/steps.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Assets/js/jquery.mask.js")"></script>


    <script>
        var Forma = 0;
        $(document).ready(function () {
            $('#CpfFuncionario').mask('000.000.000-00');
            $('#DataNascimentoFuncionario').mask('00/00/0000');
            $('#PisFuncionario').mask('000.00000.00-0');
            $('#CepFuncionario').mask('99999-999');
            $('#TelefoneFixoFuncionario').mask('(99) 9999-9999)');
            $('#TelefoneCelularFuncionario').mask('(99) 99999-9999');

            $('#DataExpedicaoCnh').mask('00/00/0000');
            $('#DataVencimentoCnh').mask('00/00/0000');
            $('#DataExpedicaoOc').mask('00/00/0000');
            $('#DataVencimentoOc').mask('00/00/0000');

        });

        function AdicionarFormacao() {
            var x = document.createElement("INPUT");
            var div = document.createElement('div');
            var div2 = document.createElement('div');
            var label = document.createElement("label");

            label.setAttribute("class", "label");

            label.innerHTML = "Formação Acadêmica";

            div.setAttribute("class", "field");
            div2.setAttribute("class", "control");

            x.setAttribute("type", "text");
            x.setAttribute("id", "formacao " + Forma);
            x.setAttribute("name", "formacao " + Forma);
            x.setAttribute("class", "input");
            x.setAttribute("required", "");
            Forma = Forma + 1;
            document.getElementById("NovaFormacao").appendChild(div);
            div.appendChild(div2);
            div2.appendChild(label);
            div2.appendChild(x);
        }

        function BuscaCertificacao(Nome) {
            $("#Conteudo").empty();
            $.ajax(
                {
                    type: 'POST',
                    url: '/Principal/BuscaCertificacao',
                    dataType: 'html',
                    cache: true,
                    async: true,
                    data: { "IdFuncao": Nome.value },
                    success: function (data) {
                        $("#Conteudo").append(data);
                        $("#Certificacoes").removeAttr("hidden");

                    }
                });
        }

        function Oculta(Qual) {
            var QualAcao = Qual;
            if (QualAcao == "Proximo") {
                var cusid_ele = document.getElementsByClassName('step-item');
                for (var i = 0; i < cusid_ele.length; ++i) {

                    var item = cusid_ele[i];
                    if (item.className.endsWith(" is-active")) {
                        if (item.id == "Profissionais") {
                            document.getElementById("Pessoais").hidden = true;
                            document.getElementById("Pro").removeAttribute("hidden");
                        }
                        if (item.id == "ConteMais") {
                            document.getElementById("Pro").hidden = true;
                            document.getElementById("Mais").removeAttribute("hidden");
                            document.getElementById("Confirma").hidden = true;
                        }
                        if (item.id == "Confirmar") {
                            document.getElementById("Pessoais").removeAttribute("hidden");
                            document.getElementById("Pro").removeAttribute("hidden");
                            document.getElementById("Mais").removeAttribute("hidden");
                            document.getElementById("Confirma").removeAttribute("style");
                        }
                    }
                }
            } else {
                var cusid_ele = document.getElementsByClassName('step-item');
                for (var i = 0; i < cusid_ele.length; ++i) {

                    var item = cusid_ele[i];
                    if (item.className.endsWith(" is-active")) {
                        if (item.id == "ConteMais") {
                            document.getElementById("Pessoais").hidden = false;
                            document.getElementById("Pro").hidden = true;

                        }
                        if (item.id == "Confirmar") {
                            document.getElementById("Pro").hidden = false;
                            document.getElementById("Mais").hidden = true;
                            document.getElementById("Confirma").hidden = true;
                        }
                        if (item.id == "Ultimo") {
                            document.getElementById("Mais").hidden = false;
                            document.getElementById("Pro").hidden = true;
                            document.getElementById("Pessoais").hidden = true;
                            $("#Confirma").hide();

                        }

                    }
                }
            }
        }


    </script>
    <script type="text/javascript" src="@Url.Content("~/Assets/js/iziToast.min.js")"></script>
    <link href="@Url.Content("~/Assets/css/font-awesome.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Assets/css/balloon.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Assets/css/iziToast.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Assets/css/StyleSheet1.css")" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <title>Formulario Cadastro</title>

</head>
<body>
    <div class="container">
        <div class="box">
            <div class="steps" id="stepsDemo">
                <div class="step-item is-active" id="Profissionais">
                    <div class="step-marker">
                        <span class="icon">
                            <i class="fa fa-user"></i>
                        </span>
                    </div>
                    <div class="step-details">
                        <p class="step-title">Passo 1</p>
                        <p>Dados Pessoais</p>
                    </div>
                </div>
                <div class="step-item" id="ConteMais">
                    <div class="step-marker">
                        <span class="icon">
                            <i class="fa fa-address-card"></i>
                        </span>
                    </div>
                    <div class="step-details">
                        <p class="step-title">Passo 2</p>
                        <p>Dados Profissionais.</p>
                    </div>
                </div>
                <div class="step-item" id="Confirmar">
                    <div class="step-marker">
                        <span class="icon">
                            <i class="fa fa-smile-o"></i>
                        </span>
                    </div>
                    <div class="step-details">
                        <p class="step-title">Passo 3</p>
                        <p>Conte-nos mais sobre você </p>
                    </div>
                </div>
                <div class="step-item" id="Ultimo">
                    <div class="step-marker">
                        <span class="icon">
                            <i class="fa fa-flag"></i>
                        </span>
                    </div>
                    <div class="step-details">
                        <p class="step-title">Passo 4</p>
                        <p>Confirme os dados.</p>
                    </div>
                </div>
                <div class="steps-actions">
                    <div class="steps-action">
                        <button data-nav="previous" onclick="javascript: Oculta('Anterior');void (0);" class="button is-primary">Anterior</button>
                    </div>
                    <div class="steps-action">
                        <button data-nav="next" class="button is-primary" onclick="javascript: Oculta('Proximo');void (0);">Proximo</button>
                    </div>
                </div>

            </div>

            @using (Html.BeginForm("FormularioCadastro", "Principal"))
            {
                @Html.ValidationSummary(true, "", new { style = "color:red;" })

                <div class="content" id="Pessoais">
                    <div class="field is-grouped">
                        <p class="control column is-3 is-expanded">
                            <label class="label">Nome</label>
                            @Html.TextBoxFor(m => m.NomeFuncionario, null, new { @class = "input", placeholder = "Ex:José Da Silva" })
                            @Html.ValidationMessageFor(m => m.NomeFuncionario, null, new { style = "color:red" })
                        </p>
                        <div class="control column is-3 is-expanded">
                            <label class="label">CPF</label>
                            @Html.TextBoxFor(m => m.CpfFuncionario, null, new { @class = "input", placeholder = "Ex: 999.999.999 - 99", id = "CpfFuncionario" })
                            @Html.ValidationMessageFor(m => m.CpfFuncionario, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">RG</label>
                            @Html.TextBoxFor(m => m.RgFuncionario, null, new { @class = "input", placeholder = "Ex: 13980091", id = "RgFuncionario" })
                            @Html.ValidationMessageFor(m => m.RgFuncionario, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">PIS</label>
                            @Html.TextBoxFor(m => m.PisFuncionario, null, new { @class = "input", placeholder = "Ex: 999.99999.99-9", id = "PisFuncionario" })
                            @Html.ValidationMessageFor(m => m.PisFuncionario, null, new { style = "color:red" })
                        </div>
                    </div>
                    <div class="field is-grouped">
                        <p class="control column is-3 is-expanded">
                            <label class="label">Nacionalidade</label>
                            @Html.TextBoxFor(m => m.Nacionalidade, null, new { @class = "input", placeholder = "Ex:Brasileiro" })
                            @Html.ValidationMessageFor(m => m.Nacionalidade, null, new { style = "color:red" })
                        </p>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Nome da Mãe</label>
                            @Html.TextBoxFor(m => m.NomeMae, null, new { @class = "input", placeholder = "Ex: Maria da Silva" })
                            @Html.ValidationMessageFor(m => m.NomeMae, null, new { style = "color:red" })
                        </div>

                        <div class="control column is-3 is-expanded">
                            <label class="label">Nome do Pai</label>
                            @Html.TextBoxFor(m => m.NomePai, null, new { @class = "input", placeholder = "Ex: Joaquin da Silva" })
                            @Html.ValidationMessageFor(m => m.NomePai, null, new { style = "color:red" })
                        </div>

                        <div class="control column is-3 is-expanded">
                            <label class="label">Data Nascimento</label>
                            @Html.TextBoxFor(m => m.DataNascimentoFuncionario, null, new { @class = "input", placeholder = "Ex: 99/99/9999", id = "DataNascimentoFuncionario" })
                            @Html.ValidationMessageFor(m => m.DataNascimentoFuncionario, null, new { style = "color:red" })
                        </div>

                    </div>
                    <div class="field is-grouped">
                        <p class="control column is-3 is-expanded">
                            <label class="label">Local de Nascimento</label>
                            @Html.TextBoxFor(m => m.LocalNascimento, null, new { @class = "input", placeholder = "Ex: Divinópolis" })
                            @Html.ValidationMessageFor(m => m.LocalNascimento, null, new { style = "color:red" })
                        </p>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Estado de Nascimento</label>
                            @Html.TextBoxFor(m => m.UfNascimento, null, new { @class = "input", placeholder = "Ex: MG" })
                            @Html.ValidationMessageFor(m => m.UfNascimento, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Telefone Fixo</label>
                            @Html.TextBoxFor(m => m.TelefoneFixo, null, new { @class = "input", placeholder = "Ex:(37)3222-2222", id = "TelefoneFixoFuncionario" })
                            @Html.ValidationMessageFor(m => m.TelefoneFixo, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Telefone Celular</label>
                            @Html.TextBoxFor(m => m.TelefoneCelular, null, new { @class = "input", placeholder = "Ex:(37)99999-9999", id = "TelefoneCelularFuncionario" })
                            @Html.ValidationMessageFor(m => m.TelefoneCelular, null, new { style = "color:red" })
                        </div>

                    </div>
                    <div class="field is-grouped">
                        <p class="control column is-3 is-expanded">
                            <label class="label">N° CNH</label>
                            @Html.TextBoxFor(m => m.Cnh, null, new { @class = "input", placeholder = "Ex: 999999" })
                            @Html.ValidationMessageFor(m => m.Cnh, null, new { style = "color:red" })
                        </p>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Orgão Emissor CNH</label>
                            @Html.TextBoxFor(m => m.OrgaoEmissorCnh, null, new { @class = "input", placeholder = "Ex: DETRAM-MG" })
                            @Html.ValidationMessageFor(m => m.OrgaoEmissorCnh, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Data Epedição CNH</label>
                            @Html.TextBoxFor(m => m.DataExpedicaoDocumentoCnh, null, new { @class = "input", placeholder = "Ex:(37)3222-2222", id = "DataExpedicaoCnh" })
                            @Html.ValidationMessageFor(m => m.DataExpedicaoDocumentoCnh, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Data Vencimento CNH</label>
                            @Html.TextBoxFor(m => m.DataValidadeCnh, null, new { @class = "input", placeholder = "Ex:(37)99999-9999", id = "DataVencimentoCnh" })
                            @Html.ValidationMessageFor(m => m.DataValidadeCnh, null, new { style = "color:red" })
                        </div>

                    </div>
                    <div class="field is-grouped">
                        <p class="control column is-3 is-expanded">
                            <label class="label">N° OC(Órgão de Classe)</label>
                            @Html.TextBoxFor(m => m.Oc, null, new { @class = "input", placeholder = "Ex: 999999" })
                            @Html.ValidationMessageFor(m => m.Oc, null, new { style = "color:red" })
                        </p>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Orgão Emissor OC(Órgão de Classe)</label>
                            @Html.TextBoxFor(m => m.OrgaoEmissorOc, null, new { @class = "input", placeholder = "Ex: CREA-MG" })
                            @Html.ValidationMessageFor(m => m.OrgaoEmissorOc, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Data Epedição OC(Órgão de Classe)</label>
                            @Html.TextBoxFor(m => m.DataExpedicaoOc, null, new { @class = "input", placeholder = "Ex: 99/99/99999", id = "DataExpedicaoOc" })
                            @Html.ValidationMessageFor(m => m.DataExpedicaoOc, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Data Vencimento OC(Órgão de Classe)</label>
                            @Html.TextBoxFor(m => m.DataValidadeOc, null, new { @class = "input", placeholder = "Ex:99/99/9999", id = "DataVencimentoOc" })
                            @Html.ValidationMessageFor(m => m.DataValidadeOc, null, new { style = "color:red" })
                        </div>

                    </div>



                    <hr />

                    <div class="field is-grouped column">
                        <div class="control column is-3 is-expanded">
                            <label class="label">Género</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdSexo, new SelectList(Model.Sexo, "Value", "Text"), "SELECIONE O SEU GÉNERO", new { id = "Sexo" })
                                @Html.ValidationMessageFor(m => m.IdSexo, null, new { style = "color:red" })
                            </div>
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Descrição de Género:</label>
                            @Html.TextBoxFor(m => m.DescricaoSexo, null, new { @class = "input", id = "DescricaosexoFuncionario" })
                            @Html.ValidationMessageFor(m => m.DescricaoSexo, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Etnia/Raça</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdEtnia, new SelectList(Model.Etnia, "Value", "Text"), "SELECIONE A SUA ETNIA/RAÇA", new { id = "Etnia" })
                                @Html.ValidationMessageFor(m => m.IdEtnia, null, new { style = "color:red" })
                            </div>
                        </div>
                        <div class="control column is-3 is-expanded ">
                            <label class="label">Estado Civil</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdEstadoCivil, new SelectList(Model.EstadoCivil, "Value", "Text"), "SELECIONE O SEU ESTADO CIVIL", new { id = "EstadoCivil" })
                                @Html.ValidationMessageFor(m => m.IdEstadoCivil, null, new { style = "color:red" })
                            </div>
                        </div>

                    </div>

                    <hr />
                    <div class="field is-grouped column">
                        <div class="control column is-4 is-expanded ">
                            <label class="label">Formação</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdFormacao, new SelectList(Model.Formacao, "Value", "Text"), "SELECIONE A SUA FORMAÇÃO", new { id = "Formacao" })
                                @Html.ValidationMessageFor(m => m.IdFormacao, null, new { style = "color:red" })
                            </div>
                        </div>
                        <div class="control is-4 column is-expanded">
                            <label class="label">Formação Acadêmica</label>
                            @Html.TextBoxFor(m => m.FormacaoAcademica, null, new { @class = "input", placeholder = "Ex: Administração", id = "FormacaoFuncionario" })
                            @Html.ValidationMessageFor(m => m.FormacaoAcademica, null, new { style = "color:red" })
                        </div>

                    </div>

                    <div id="NovaFormacao" class="column">


                    </div>
                    <P class="control column">
                        <a class="tag is-primary is-rounded is-medium" href="javascript:AdicionarFormacao();void(0);">Adicionar outra formação</a>
                    </P>

                    <div class="field is-grouped column">
                        <div class="control column is-3 is-expanded">
                            <label class="label">Usuário do Sistema</label>
                            @Html.TextBoxFor(m => m.UsuarioSistema, null, new { @class = "input", placeholder = "Ex:SicoobD4030_00", id = "UsuarioFuncionario" })
                            @Html.ValidationMessageFor(m => m.UsuarioSistema, null, new { style = "color:red" })
                        </div>


                        <div class="control column is-3 is-expanded">
                            <label class="label">E-mail</label>
                            @Html.TextBoxFor(m => m.Email, null, new { @class = "input", placeholder = "Ex:teste@divicred.com.br", id = "EmailFuncionario" })
                            @Html.ValidationMessageFor(m => m.Email, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">E-mail Secundário</label>
                            @Html.TextBoxFor(m => m.EmailSecundario, null, new { @class = "input", placeholder = "Ex:teste@divicred.com.br", id = "EmailFuncionario" })
                            @Html.ValidationMessageFor(m => m.EmailSecundario, null, new { style = "color:red" })
                        </div>

                        <div class="control column is-3 is-expanded">
                            <label class="label">PA</label>
                            @Html.TextBoxFor(m => m.PA, null, new { @class = "input", placeholder = "Ex:99", id = "PaFuncionario" })
                            @Html.ValidationMessageFor(m => m.PA, null, new { style = "color:red" })
                        </div>

                    </div>
                    <hr />
                    <div class="title is-4 is-vertical is-parent">
                        <h2 class="title is-4">Endereço Pessoal</h2>
                    </div>

                    <div class="field is-grouped ">
                        <div class="control column is-3 is-expanded">
                            <label class="label">CEP</label>
                            @Html.TextBoxFor(m => m.Cep, null, new { @class = "input", placeholder = "Ex: 35500-002", id = "CepFuncionario" })
                            @Html.ValidationMessageFor(m => m.Cep, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Rua</label>
                            @Html.TextBoxFor(m => m.Rua, null, new { @class = "input", placeholder = "Ex: Av. Primeiro de Junho", id = "RuaFuncionario" })
                            @Html.ValidationMessageFor(m => m.Rua, null, new { style = "color:red" })
                        </div>

                        <div class="control column is-3 is-expanded">
                            <label class="label">N°</label>
                            @Html.TextBoxFor(m => m.Numero, null, new { @class = "input", placeholder = "Ex: 210", id = "NumeroFuncionario" })
                            @Html.ValidationMessageFor(m => m.Numero, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Complemento</label>
                            @Html.TextBoxFor(m => m.Complemento, null, new { @class = "input", placeholder = "Ex: Apt:210", })
                            @Html.ValidationMessageFor(m => m.Complemento, null, new { style = "color:red" })
                        </div>

                        
                    </div>
                <div class="field is-grouped ">
                    <div class="control column is-3 is-expanded">
                        <label class="label">Bairro</label>
                        @Html.TextBoxFor(m => m.Bairro, null, new { @class = "input", placeholder = "Ex: Centro", id = "BairroFuncionario" })
                        @Html.ValidationMessageFor(m => m.Bairro, null, new { style = "color:red" })
                    </div>

                    <div class="control column is-3 is-expanded">
                        <label class="label">Cidade</label>
                        @Html.TextBoxFor(m => m.Cidade, null, new { @class = "input", placeholder = "Ex: Divinópolis", id = "CidadeFuncionario" })
                        @Html.ValidationMessageFor(m => m.Cidade, null, new { style = "color:red" })
                    </div>
                    <div class="control column is-3 is-expanded">
                        <label class="label">País</label>
                        @Html.TextBoxFor(m => m.Pais, null, new {@class = "input", placeholder = "Ex: Brasil"})
                        @Html.ValidationMessageFor(m => m.Pais, null, new {style = "color:red"})
                    </div>
                </div>
                <div class="control column is-2">
                    <label class="label">Residência própria ?</label>
                    <div class="control">
                        <label class="radio">
                            @Html.RadioButtonFor(m => m.ResidenciaPropria, "Sim")
                            Sim
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(m => m.ResidenciaPropria, "Não")

                            Não
                        </label>
                        @Html.ValidationMessageFor(m => m.ResidenciaPropria, null, new {style = "color:red"})
                    </div>
                </div>
                <div class="control column is-4">
                    <label class="label">Sua residência foi comprada com recursos de FGTS ?</label>
                    <div class="control">
                        <label class="radio">
                            @Html.RadioButtonFor(m => m.RecursoFgts, "Sim")
                            Sim
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(m => m.RecursoFgts, "Não")
                            Não
                        </label>
                        @Html.ValidationMessageFor(m => m.RecursoFgts, null, new {style = "color:red"})
                    </div>
                </div>
                </div>
                <div id="Pro" hidden class="content">
                    <div class="field is-grouped column">
                        <div class="control column is-3 is-expanded">
                            <label class="label">N° CTPS</label>
                            @Html.TextBoxFor(m => m.NumeroCTPS, null, new { @class = "input", placeholder = "Ex: 9999999" })
                            @Html.ValidationMessageFor(m => m.NumeroCTPS, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3 is-expanded">
                            <label class="label">Serie CTPS</label>
                            @Html.TextBoxFor(m => m.SerieCTPS, null, new { @class = "input", placeholder = "Ex: 0000" })
                            @Html.ValidationMessageFor(m => m.SerieCTPS, null, new { style = "color:red" })
                        </div>
                        <div class="control column is-3">
                            <label class="label">Estado de expedição CTPS</label>
                            @Html.TextBoxFor(m => m.UfCTPS, null, new { @class = "input", placeholder = "Ex: 0000" })
                            @Html.ValidationMessageFor(m => m.UfCTPS, null, new { style = "color:red" })
                        </div>
                    </div>
                    <hr />
                    <div class="field is-grouped column">
                        <div class="control column is-6 is-expanded">
                            <label class="label">Setor</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdSetor, new SelectList(Model.Setor, "Value", "Text"), "SELECIONE O SEU SETOR", new { id = "Setor" })
                                @Html.ValidationMessageFor(m => m.IdSetor, null, new { style = "color:red" })
                            </div>
                        </div>
                        <div class="control column is-6 is-expanded">
                            <label class="label">Função</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdFuncao, new SelectList(Model.Funcao, "Value", "Text"), "SELECIONE A SUA FUNÇÃO", new { id = "Funcao", onchange = "BuscaCertificacao(this)" })
                                @Html.ValidationMessageFor(m => m.IdFuncao, null, new { style = "color:red" })
                            </div>
                        </div>
                    </div>

                    <blockquote id="Certificacoes" hidden>
                        <b>Certificações Obrigatórias</b>
                        <div id="Conteudo">

                        </div>
                        <br />
                        <label class="checkbox">
                            <input type="checkbox" id="ConfirmacaoCertificacao" name="ConfirmacaoCertificacao">
                            Possuo todas as certificações acima.
                        </label>
                    </blockquote>
                    <div class="field">
                        <blockquote>
                            <p>
                                <b>Salário Base: R$@TempData["Salario"]</b> || <b>Estagiário: @TempData["Estagiario"]</b> || <b>Contrato Estágio: @TempData["DataEstagio"]</b>
                            </p>
                            <b>Quebra de Caixa: R$@TempData["QuebraCaixa"]</b>
                            <br />
                            <b>Anuênio: R$@TempData["Anuenio"]</b>
                            <br />
                            <b>Ticket: R$@TempData["Ticket"]</b>
                            <br />
                        </blockquote>
                    </div>
                </div>
                <div id="Mais" hidden class="content">
                    <div class="field">
                        <div class="control">
                            <label class="label">Quantos Filhos você tem ?</label>
                            @Html.TextBoxFor(m => m.QuatidadeFilho, null, new { @class = "input" })
                            @Html.ValidationMessageFor(m => m.QuatidadeFilho, null, new { style = "color:red" })
                        </div>
                        <div class="control">
                            <label class="label">Caso você tenha Filhos conte-nos quais as datas de nascimento deles ?</label>
                            @Html.TextBoxFor(m => m.DataNascimentoFilho, null, new { @class = "input" })
                            @Html.ValidationMessageFor(m => m.DataNascimentoFilho, null, new { style = "color:red" })
                        </div>
                        <div class="control">
                            <label class="label">Em caso de uma emergência devemos ligar para quem ?</label>
                            @Html.TextBoxFor(m => m.ContatoEmergencia, null, new { @class = "input" })
                            @Html.ValidationMessageFor(m => m.ContatoEmergencia, null, new { style = "color:red" })
                        </div>
                        <div class="control">
                            <label class="label">Quais são seus principais hobbies ?</label>
                            @Html.TextBoxFor(m => m.PrincipaisHobbies, null, new { @class = "input" })
                            @Html.ValidationMessageFor(m => m.PrincipaisHobbies, null, new { style = "color:red" })
                        </div>
                        <div class="control">
                            <label class="label">Qual sua comida favorita?</label>
                            @Html.TextBoxFor(m => m.ComidaFavorita, null, new { @class = "input" })
                            @Html.ValidationMessageFor(m => m.ComidaFavorita, null, new { style = "color:red" })
                        </div>
                        <div class="control">
                            <label class="label">Você gosta de viajar ? Se sim quais os principais destinos que você gostaria de ir.</label>
                            @Html.TextBoxFor(m => m.Viagem, null, new { @class = "input" })
                            @Html.ValidationMessageFor(m => m.Viagem, null, new { style = "color:red" })
                        </div>

                        <br />

                    </div>
                </div>
                <div class="control">
                    <label class="checkbox">
                        <input type="checkbox" id-="ConfirmacaoDados" name="ConfirmacaoDados"> Eu confirmo que todas as informações informadas acima são verdadeiras.
                    </label>
                </div>
                <div class="buttons has-addons is-right">
                    <button type="submit" style="display: none;" id="Confirma" class="button is-primary ">Confirmar Dados</button>
                </div>
            }
        </div>

    </div>
</body>
</html>