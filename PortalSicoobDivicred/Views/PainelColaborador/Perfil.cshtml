@using System.Web.Mvc.Html
@model PortalSicoobDivicred.Models.Funcionario


<script src='@Url.Content("~/Assets/js/jquery-ui.min.js")' type="text/javascript"></script>
<link href="@Url.Content("~/Assets/css/animate.css")" rel="stylesheet" />
<script type="text/javascript" src="@Url.Content("~/Assets/js/iziToast.min.js")"></script>
<link href="@Url.Content("~/Assets/css/iziToast.min.css")" rel="stylesheet" />


<script>
    function EscondeProfissional() {
        if ($("#DadosProfissionais").is(":visible")) {
            $("#DadosProfissionais").addClass("animated fadeOut");

            $("#DadosProfissionais").hide();
        } else {
            $("#DadosProfissionais").removeClass("animated fadeOut");
            $("#DadosProfissionais").addClass("animated fadeIn");
            $("#DadosProfissionais").show();
        }
    }

    function EscondePessoal() {
        if ($("#DadosPessoais").is(":visible")) {
            $("#DadosPessoais").addClass("animated fadeOut");

            $("#DadosPessoais").hide();
        } else {
            $("#DadosPessoais").removeClass("animated fadeOut");
            $("#DadosPessoais").addClass("animated fadeIn");
            $("#DadosPessoais").show();
        }
    }
    function EscondeArquivoPessoal() {
        if ($("#ArquivoPessoal").is(":visible")) {
            $("#ArquivoPessoal").addClass("animated fadeOut");

            $("#ArquivoPessoal").hide();
        } else {
            $("#ArquivoPessoal").removeClass("animated fadeOut");
            $("#ArquivoPessoal").addClass("animated fadeIn");
            $("#ArquivoPessoal").show();
        }
    }

    $("#file-input").change(function() {
        document.body.style.cursor = "wait";
        var formData = new FormData();
        var totalFiles = document.getElementById("file-input").files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("file-input").files[i];

            formData.append("file-input", file);
        }
        $.ajax({
            type: "POST",
            url: '/PainelColaborador/Upload',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function(data) {
                alert(data);
            },
            error: function(xhr, ajaxOptions, thrownError) {
                alert("Imagem alterada com sucesso.");
                document.location.href = "/Principal/Principal";
            }
        });
    });

</script>


<br />
<div class="container">
    <div class="box column is-12 is-narrow">
        <article class="media">
            <div class="media-left">
                <figure class="image is-64x64">
                    <img src="@TempData["foto"]" alt="Image">
                </figure>
            </div>
            <div class="media-content">
                <div class="content">
                    <p>
                        <strong>@TempData["NomeFuncionario"]</strong>
                        <br/>
                        @TempData["Funcao"]
                        <br/>
                        @TempData["DataAdmissao"]
                        <br>
                    </p>
                </div>
                <nav class="level is-mobile">
                <div class="level-left">
                    <div class="file is-small is-primary">
                        <label class="file-label">
                            <input class="file-input" id="file-input" type="file" name="resume">
                            <span class="file-cta">
                                <span class="file-icon">
                                    <i class="fa fa-upload"></i>
                                </span>
                                <span class="file-label">
                                    Alterar Foto Perfil
                                </span>
                            </span>
                        </label>
                    </div>
                    </div>
                </nav>
            </div>
        </article>
    </div>
    <div class="columns">
    <div class="column is-6">
        <div class="card ">
            <header class="card-header">
                <p class="card-header-title">
                    Dados Profissionais
                </p>
                <a href="javascript:EscondeProfissional();void(0);" class="card-header-icon" aria-label="more options">
                    <span class="icon">
                        <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                </a>
            </header>
        @using (Html.BeginForm("AtualizarDadosProfissionais", "PainelColaborador", FormMethod.Post, new {id = "FormProfissional"}))
        {
            <div id="DadosProfissionais">
                <div class="card-content">
                    <div class="field is-grouped column">
                        <div class="control is-2 ">
                            <label class="label">Setor</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.IdSetor, new SelectList(Model.Setor, "Value", "Text"), "SELECIONE O SEU SETOR", new {id = "Setor"})
                                @if (Convert.ToInt32(TempData["IdSetor"].ToString()) > 0)
                                {
                                    @Html.Label("")
                                    <script>
                                        function myFunction() {

                                            var s = document.getElementById("Setor");
                                            for (i = 0; i < document.getElementById("Setor").options.length; i++) {

                                                if (s.options[i].value == @TempData["IdSetor"].ToString()) {

                                                    // Item is found. Set its property and exit

                                                    s.options[i].selected = true;

                                                    break;

                                                }
                                            }

                                        }

                                        myFunction();
                                    </script>
                                }
                            </div>
                        </div>
                        <div class="control is-4">
                            <label class="label">Função</label>
                            @Html.TextBoxFor(m => m.Funcao, null, new {@class = "input", placeholder = "Ex: Assistente ", id = "FuncaoFuncionario"})
                            @Html.ValidationMessageFor(m => m.Funcao, null, new {style = "color:red"})
                        </div>
                    </div>
                    <div class="field">
                        <blockquote>
                            <p>
                                <b>Salário Base: R$@TempData["Salario"]</b> || <b>Estagiário: @TempData["Estagiario"]</b> || <b>Contrato Estágio: @TempData["DataEstagio"]</b>
                            </p>
                            <b>Quebra de Caixa: R$@TempData["QuebraCaixa"]</b>
                            <br/>
                            <b>Anuênio: R$@TempData["Anuenio"]</b>
                            <br/>
                            <b>Ticket: R$@TempData["Ticket"]</b>
                            <br/>
                        </blockquote>
                    </div>
                </div>
                <footer class="card-footer">
                    <a onclick="FormProfissional.submit();" class="card-footer-item">Salvar</a>
                </footer>
            </div>
        }
        </div>

        <br/>

        <div class="card">
            <header class="card-header">
                <p class="card-header-title">
                    Arquivos Pessoais
                </p>
                <a href="javascript:EscondeArquivoPessoal();void(0);" class="card-header-icon" aria-label="more options">
                    <span class="icon">
                        <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                </a>
            </header>
            <div id="ArquivoPessoal">
                <div class="card-content">
                    <div class="file has-name is-fullwidth is-primary">
                        <label class="file-label">
                            <input class="file-input " type="file" name="resume">
                            <span class="file-cta">
                                <span class="file-icon">
                                    <i class="fa fa-check"></i>
                                </span>
                                <span class="file-label">
                                    Identidade
                                </span>
                            </span>
                            <span class="file-name">
                                Screen Shot 2017-07-29 at 15.54.25.png
                            </span>
                        </label>
                    </div>
                    <br/>
                    <div class="file has-name is-fullwidth">
                        <label class="file-label">
                            <input class="file-input" type="file" name="resume">
                            <span class="file-cta">
                                <span class="file-icon">
                                    <i class="fa fa-upload"></i>
                                </span>
                                <span class="file-label">
                                    Comprovante de Endereço
                                </span>
                            </span>
                            <span class="file-name">
                                Screen Shot 2017-07-29 at 15.54.25.png
                            </span>
                        </label>
                    </div>
                    <br/>
                    <div class="file has-name is-fullwidth is-danger">
                        <label class="file-label">
                            <input class="file-input" type="file" name="resume">
                            <span class="file-cta">
                                <span class="file-icon">
                                    <i class="fa fa-exclamation-circle"></i>
                                </span>
                                <span class="file-label">
                                    Certidão Casamento
                                </span>
                            </span>
                            <span class="file-name">
                                Screen Shot 2017-07-29 at 15.54.25.png
                            </span>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>

        
        

    <div class="column is-6">
        <div class="card">
        <header class="card-header">
            <p class="card-header-title">
                Dados Pessoais
            </p>
            <a href="javascript:EscondePessoal();void(0);" class="card-header-icon" aria-label="more options">
                <span class="icon">
                    <i class="fa fa-angle-down" aria-hidden="true"></i>
                </span>
            </a>
        </header>
        @using (Html.BeginForm("AtualizaDadosPessoais", "PainelColaborador",FormMethod.Post,new{id="FormPessoal"}))
        {
            <div id="DadosPessoais">
            <div class="card-content">
            <div class="field is-grouped">
                <p class="control column is-6">
                    <label class="label">Nome</label>
                    @Html.TextBoxFor(m => m.NomeFuncionario, null, new {@class = "input", placeholder = "Ex:José Da Silva"})
                    @Html.ValidationMessageFor(m => m.NomeFuncionario, null, new {style = "color:red"})
                </p>
                <div class="control column is-4">
                    <label class="label">CPF</label>
                    @Html.TextBoxFor(m => m.CpfFuncionario, null, new {@class = "input", placeholder = "Ex: 999.999.999 - 99", id = "CpfFuncionario"})
                    @Html.ValidationMessageFor(m => m.CpfFuncionario, null, new {style = "color:red"})
                </div>
            </div>
            <div class="field is-grouped">
                <div class="control column is-4">
                    <label class="label">RG</label>
                    @Html.TextBoxFor(m => m.RgFuncionario, null, new {@class = "input", placeholder = "Ex: 13980091", id = "RgFuncionario"})
                    @Html.ValidationMessageFor(m => m.RgFuncionario, null, new {style = "color:red"})
                </div>
                <div class="control column is-4">
                    <label class="label">PIS</label>
                    @Html.TextBoxFor(m => m.PisFuncionario, null, new {@class = "input", placeholder = "Ex: 999.99999.99-9", id = "PisFuncionario"})
                    @Html.ValidationMessageFor(m => m.PisFuncionario, null, new {style = "color:red"})
                </div>
                <div class="control column is-4">
                    <label class="label">Data Nascimento</label>
                    @Html.TextBoxFor(m => m.DataNascimentoFuncionario, null, new {@class = "input", placeholder = "Ex: 99/99/9999", id = "DataNascimentoFuncionario"})
                    @Html.ValidationMessageFor(m => m.DataNascimentoFuncionario, null, new {style = "color:red"})

                </div>
            </div>

            <hr/>

            <div class="field is-grouped column">
                <div class="control is-2">
                    <label class="label">Sexo</label>
                    <div class="select">
                        @Html.DropDownListFor(m => m.IdSexo, new SelectList(Model.Sexo, "Value", "Text"), "SELECIONE O SEU SEXO", new {id = "Sexo"})
                        @if (Convert.ToInt32(TempData["IdSexo"].ToString()) > 0)
                        {
                            @Html.Label("")
                            <script>
                                function myFunction() {

                                    var s = document.getElementById("Sexo");
                                    for (i = 0; i < document.getElementById("Sexo").options.length; i++) {

                                        if (s.options[i].value == @TempData["IdSexo"].ToString()) {

                                            // Item is found. Set its property and exit

                                            s.options[i].selected = true;

                                            break;

                                        }
                                    }

                                }

                                myFunction();
                            </script>
                        }
                    </div>
                </div>
                <div class="control is-4">
                    <label class="label">Descrição Sexo:</label>
                    @Html.TextBoxFor(m => m.DescricaoSexo, null, new {@class = "input", id = "DescricaosexoFuncionario"})
                    @Html.ValidationMessageFor(m => m.DescricaoSexo, null, new {style = "color:red"})
                </div>
            </div>
            <div class="field is-grouped column">
                <div class="control ">
                    <label class="label">Etnia/Raça</label>
                    <div class="select">
                        @Html.DropDownListFor(m => m.IdEtnia, new SelectList(Model.Etnia, "Value", "Text"), "SELECIONE A SUA ETNIA/RAÇA", new {id = "Etnia"})
                        @if (Convert.ToInt32(TempData["IdEtnia"].ToString()) > 0)
                        {
                            @Html.Label("")
                            <script>
                                function myFunction() {

                                    var s = document.getElementById("Etnia");
                                    for (i = 0; i < document.getElementById("Etnia").options.length; i++) {

                                        if (s.options[i].value == @TempData["IdEtnia"].ToString()) {

                                            // Item is found. Set its property and exit

                                            s.options[i].selected = true;

                                            break;

                                        }
                                    }

                                }

                                myFunction();
                            </script>
                        }
                    </div>
                </div>
                <div class="control ">
                    <label class="label">Estado Civil</label>
                    <div class="select">
                        @Html.DropDownListFor(m => m.IdEstadoCivil, new SelectList(Model.EstadoCivil, "Value", "Text"), "SELECIONE O SEU ESTADO CIVIL", new {id = "EstadoCivil"})
                        @if (Convert.ToInt32(TempData["IdEstadoCivil"].ToString()) > 0)
                        {
                            @Html.Label("")
                            <script>
                                function myFunction() {

                                    var s = document.getElementById("EstadoCivil");
                                    for (i = 0; i < document.getElementById("EstadoCivil").options.length; i++) {

                                        if (s.options[i].value == @TempData["IdEstadoCivil"].ToString()) {

                                            // Item is found. Set its property and exit

                                            s.options[i].selected = true;

                                            break;

                                        }
                                    }

                                }

                                myFunction();
                            </script>
                        }
                    </div>
                </div>

            </div>

            <hr/>
            <div class="field is-grouped column">
                <div class="control is-2 ">
                    <label class="label">Formação</label>
                    <div class="select">
                        @Html.DropDownListFor(m => m.IdFormacao, new SelectList(Model.Formacao, "Value", "Text"), "SELECIONE A SUA FORMAÇÃO", new {id = "Formacao"})
                        @if (Convert.ToInt32(TempData["IdFormacao"].ToString()) > 0)
                        {
                            @Html.Label("")
                            <script>
                                function myFunction() {

                                    var s = document.getElementById("Formacao");
                                    for (i = 0; i < document.getElementById("Formacao").options.length; i++) {

                                        if (s.options[i].value == @TempData["IdFormacao"].ToString()) {

                                            // Item is found. Set its property and exit

                                            s.options[i].selected = true;

                                            break;

                                        }
                                    }

                                }

                                myFunction();
                            </script>
                        }
                    </div>
                </div>

            </div>
            <div class="field is-grouped column">
                <div class="control is-2">
                    <label class="label">Formação Acadêmica</label>
                    @Html.TextBoxFor(m => m.FormacaoAcademica, null, new {@class = "input", placeholder = "Ex: Administração", id = "FormacaoFuncionario"})
                    @Html.ValidationMessageFor(m => m.FormacaoAcademica, null, new {style = "color:red"})
                </div>
                <div class="control is-2">

                    <label class="label">Usuário do Sistema</label>
                    @Html.TextBoxFor(m => m.UsuarioSistema, null, new {@class = "input", placeholder = "Ex:SicoobD4030_00", id = "UsuarioFuncionario"})
                    @Html.ValidationMessageFor(m => m.UsuarioSistema, null, new {style = "color:red"})
                </div>



            </div>
            <div class="field is-grouped column">
                <div class="control is-5">
                    <label class="label">E-mail</label>
                    @Html.TextBoxFor(m => m.Email, null, new {@class = "input", placeholder = "Ex:teste@divicred.com.br", id = "EmailFuncionario"})
                    @Html.ValidationMessageFor(m => m.Email, null, new {style = "color:red"})
                </div>
                <div class="control is-1">
                    <label class="label">PA</label>
                    @Html.TextBoxFor(m => m.PA, null, new {@class = "input", placeholder = "Ex:99", id = "PaFuncionario"})
                    @Html.ValidationMessageFor(m => m.PA, null, new {style = "color:red"})
                </div>

            </div>
            <hr/>
            <div class="field is-grouped column">

                <div class="control is-2">
                    <label class="label">Rua</label>
                    @Html.TextBoxFor(m => m.Rua, null, new {@class = "input", placeholder = "Ex: Av. Primeiro de Junho", id = "RuaFuncionario"})
                    @Html.ValidationMessageFor(m => m.Rua, null, new {style = "color:red"})
                </div>

                <div class="control is-2">
                    <label class="label">N°</label>
                    @Html.TextBoxFor(m => m.Numero, null, new {@class = "input", placeholder = "Ex: 210", id = "NumeroFuncionario"})
                    @Html.ValidationMessageFor(m => m.Numero, null, new {style = "color:red"})
                </div>
            </div>
            <div class="field is-grouped column">

                <div class="control is-2">
                    <label class="label">Bairro</label>
                    @Html.TextBoxFor(m => m.Bairro, null, new {@class = "input", placeholder = "Ex: Centro", id = "BairroFuncionario"})
                    @Html.ValidationMessageFor(m => m.Bairro, null, new {style = "color:red"})
                </div>

                <div class="control is-2">
                    <label class="label">Cidade</label>
                    @Html.TextBoxFor(m => m.Cidade, null, new {@class = "input", placeholder = "Ex: Divinópolis", id = "CidadeFuncionario"})
                    @Html.ValidationMessageFor(m => m.Cidade, null, new {style = "color:red"})
                </div>
            </div>

            </div>
            <footer class="card-footer">
                <a onclick="FormPessoal.submit();" class="card-footer-item">Salvar</a>
            </footer>
            </div>
        }
        </div>
        
        </div>
    </div>
</div>
